<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" >

    <xacro:include filename="inertial_macros.xacro"/>
    <xacro:include filename="common_properties.xacro"/>

    <material name="white">
        <color rgba="1 1 1 1" />
    </material>

    <material name="orange">
        <color rgba="1 0.3 0.1 1"/>
    </material>

    <material name="blue">
        <color rgba="0.2 0.2 1 1"/>
    </material>

    <material name="black">
        <color rgba="0 0 0 1"/>
    </material>

    <material name="red">
        <color rgba="1 0 0 1"/>
    </material>

    <!-- BASE LINK -->

    <link name="base_link">
    </link>

    <!-- BASE_FOOTPRINT LINK -->
    <link name="base_footprint">
    </link>

    <joint name="base_footprint_joint" type="fixed">
        <parent link="base_link"/>
        <child link="base_footprint"/>
        <origin xyz="0 0 ${-wheel_radius}" rpy="0 0 0"/>
    </joint>

    <!-- CHASSIS LINK -->

    <joint name="chassis_joint" type="fixed">
        <parent link="base_link"/>
        <child link="chassis"/>
        <origin xyz="${-wheel_offset_x} 0 ${-wheel_offset_z}"/>
    </joint>

    <link name="chassis">
        <visual>
            <origin xyz="${chassis_length/2} 0 ${chassis_height/2}"/>
            <geometry>
                <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
            </geometry>
            <material name="orange"/>
        </visual>
        <collision>
            <origin xyz="${chassis_length/2} 0 ${chassis_height/2}"/>
            <geometry>
                <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
            </geometry>
        </collision>
        <xacro:inertial_box mass="0.5" x="${chassis_length}" y="${chassis_width}" z="${chassis_height}">
            <origin xyz="${chassis_length/2} 0 ${chassis_height/2}" rpy="0 0 0"/>
        </xacro:inertial_box>
    </link>

    <gazebo reference="chassis">
        <material>Gazebo/Orange</material>
    </gazebo>

    <!-- LEFT WHEEL LINK -->

    <joint name="left_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="left_wheel"/>
        <origin xyz="0 ${wheel_offset_y} 0" rpy="-${pi/2} 0 0" />
        <axis xyz="0 0 1"/>
    </joint>

    <link name="left_wheel">
        <visual>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <collision>
            <geometry>
                <!-- <sphere radius="${wheel_radius}"/> -->
                <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_thickness}" radius="${wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <gazebo reference="left_wheel">
        <material>Gazebo/Blue</material>
        <!-- kp and kd for rubber -->
        <kp>1000000.0</kp> <!--contact stiffness-->
        <kd>100.0</kd> <!--damping-->
        <mu1>1.0</mu1>
        <mu2>1.0</mu2>
        <fdir1>1 0 0</fdir1>
        <maxVel>1.0</maxVel>
        <minDepth>0.005</minDepth> <!--contacts gripping, 0 also works-->
    </gazebo>

    <!-- RIGHT WHEEL LINK -->

    <joint name="right_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="right_wheel"/>
        <origin xyz="0 ${-wheel_offset_y} 0" rpy="${pi/2} 0 0" />
        <axis xyz="0 0 -1"/>
    </joint>

    <link name="right_wheel">
        <visual>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <collision>
            <geometry>
                <!-- <sphere radius="${wheel_radius}"/> -->
                <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_thickness}" radius="${wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <gazebo reference="right_wheel">
        <material>Gazebo/Blue</material>
        <!-- kp and kd for rubber -->
        <kp>1000000.0</kp> <!--contact stiffness-->
        <kd>100.0</kd> <!--damping-->
        <mu1>1.0</mu1>
        <mu2>1.0</mu2>
        <fdir1>1 0 0</fdir1>
        <maxVel>1.0</maxVel>
        <minDepth>0.005</minDepth> <!--contacts gripping, 0 also works-->
    </gazebo>


    <!-- CASTER WHEEL LINK -->

    <joint name="caster_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="caster_wheel"/>
        <!-- <origin xyz="${caster_wheel_offset_x} 0 ${caster_wheel_offset_z}" rpy="${pi/2} 0 0" /> -->
        <origin xyz="${-caster_wheel_offset_x} 0 ${-caster_wheel_offset_z}" rpy="${pi/2} 0 0" />
        <axis xyz="0 0 -1"/>
    </joint>

    <link name="caster_wheel">
        <visual>
            <geometry>
                <!-- <sphere radius="${caster_wheel_radius}"/> -->
                <cylinder radius="${caster_wheel_radius}" length="${wheel_thickness}"/>
            </geometry>
            <material name="white"/>
        </visual>
        <collision>
            <geometry>
                <!-- <sphere radius="${caster_wheel_radius}"/> -->
                <cylinder radius="${caster_wheel_radius}" length="${wheel_thickness}"/>
            </geometry>
        </collision>
        <!-- <xacro:inertial_sphere mass="${caster_wheel_mass}" radius="${caster_wheel_radius}"> -->
        <xacro:inertial_cylinder mass="${caster_wheel_mass}" length="${wheel_thickness}" radius="${caster_wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
        <!-- </xacro:inertial_sphere> -->
    </link>

    <!--The robot will always slip no matter the collision shape of the two wheels is, this only incase of the caster wheel is fixed link and no friction is added, read below-->

    <!--For left and right wheels: -->
    <!--The right way to solve the slip and flicker contact points is by adding stiffness & damping also force direction helps, these values are for rubber wheels-->
    <!--The collision alone will not fix the problem, as specified in gazebo guide, adding the factors will help stablize the contact points with the ground, -->
    <!-- also collision paramter is missing the friction tags, it can be added but you have to change the file to sdf format, so we added in gazebo tags instead-->
    <!--As per gazebo guide, adding a fixed joint to a link (which is caster_wheel) and make contact with the ground will produce bad results, -->
    <!-- you can check the center of mass and inertia, both will have a very strange form and shifted location, this due to gazebo engine failed to compute this fixed caster link-->
    <!--The best solution for this as per gazebo guide is to make the (base_link) frame contain the caster wheel, becasue it's already fixed, then gazebo will produce the right results-->
    <!--Since right now we can't produce a complex shape without a mesh, another way to fix this issue is to change this joint to a rotating joint-->
    <!--Gazebo then will normally fix all paramters for the inertia and center of mass, also to make it work with gazebo_ros2_control, add extra_joints to the joints broadcaster in controller.yaml-->

    <!--For caster wheel: -->
    <!--the below params are optional, since now the caster is rotating so we fixed the center of mass and inertia problem that will make the robot slip-->
    <!--if the below params not added the contacts for the caster will flicker, this will not change any behavior of the robot, since the caster is not meant to touch the ground,-->
    <!--for clarity we added the kp and kd values so that the contacts will no longer flicker, but this means that the caster will now have an effect on the behavior of the robot-->
    <!--the shape doesn't matter as the point of contact will produce friction and hence hinder the robot movements during rotation and backward movement as well #this effect was tested#-->
    <!--we keep the values of kp and kd but also add a zero friction so that the caster wheel will slip on the surface will maintaining stable contact-->
    <!--we don't want the caster wheel to have any effect on the robot movements, later it should  be combined with chassis as one part-->
    
    <!--all effects were tested, further edit required, the gripping affects the slip of the robot after stopping, also the mu1 and mu2 factors need more tuning-->

    <gazebo reference="caster_wheel">
        <material>Gazebo/White</material>
        <kp>1000000.0</kp>
        <kd>100.0</kd>
        <fdir1>1 0 0</fdir1>
        <maxVel>1.0</maxVel>
        <minDepth>0.0</minDepth>
        <mu1>0.0</mu1>
        <mu2>0.0</mu2>
    </gazebo>

</robot>